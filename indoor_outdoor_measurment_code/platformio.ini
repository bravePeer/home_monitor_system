; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:attiny2313]
platform = atmelavr
board = attiny2313
; change microcontroller
; board_build.mcu = t2313
board_build.mcu = attiny2313a
build_flags = 
	-DATTINY2313A
	-std=c++17
	-Os

build_unflags = -std=c++11
; change MCU frequency
board_build.f_cpu = 8000000L

upload_protocol = custom
upload_port = usb
; upload_port = COM13
upload_speed = 9600
board_fuses.lfuse = 0xe4
board_fuses.hfuse = 0xDf
upload_flags = 
	-C
	${platformio.packages_dir}/tool-avrdude/avrdude.conf
	-p
	t2313
	-P
	$UPLOAD_PORT
	-b
	$UPLOAD_SPEED
	-e
	; -c
	; arduino
	; -b
	; 19200
	-c
	usbasp
	-B0.25
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

[env:atmega328P]
platform = atmelavr
board = pro16MHzatmega328
build_flags = -DATMEGA328P

board_build.mcu = atmega328p
board_build.f_cpu = 16000000L
upload_protocol = arduino

upload_speed = 57600
upload_flags = -D

[env:pico]
; platform = raspberrypi@1.13.0
; framework = arduino

platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = picosdk

; upload_protocol = picotool
upload_protocol = cmsis-dap
; upload_port = COM16
build_flags = 
	-DRP2040
	-std=c++17
	-DPIO_NO_STDIO_UART
	-DWEATHER_RECEIVER
; 	-DPICO_STDIO_USB
; 	-DUSE_TINYUSB
; 	; -I"C:\Users\barte\.platformio\packages\framework-picosdk\src\common\pico_sync\include\"
; 	; -I"C:\Users\barte\.platformio\packages\framework-picosdk\lib\tinyusb\src"
; build_unflags = -std=c++11
; lib_deps = tinyusb
; debug_tool = picoprobe
debug_tool = cmsis-dap
debug_speed = 10000 
build_type = debug
; lib_archive = no

[env:native]
platform = native
build_flags = 
	-DWEATHER_RECEIVER
; lib_deps = Unity@2.6.0